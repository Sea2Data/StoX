[Function]
Name: FillMissingData
Description: The <I>FillMissingData</I> function fills in missing data for population parameters in the super individuals data object of the baseline model. This task is performed in two steps. After updating the input <U>SuperIndividual</U> data object&#44; it becomes the output data object. This is later used to present abundance estimates by combinations of various population parameters.
Class: no.imr.stox.functions.report.FillMissingData
Respondable:true
Parameter: Name=SuperIndividuals, Alias=SuperIndAbundance, DataType=SuperIndividuals, FileRef=true, Description=The <I>SuperIndAbundance</I> parameter is used to identify which .csv file from the baseline model should be used as input to this function.<BR><BR>It is not the name of the file that is to be given&#44; but the StoX data type it represents. This data type needs to be <U>SuperIndAbundance</U>.<BR> An updated version of the input <U>SuperIndAbundance</U> is the output from the function.
Parameter: Name=FillVariables, Required=true, DefaultValue=ImputeByAge, Values=ImputeByAge;None, DataType=String, Description=The <I>FillVariables</I> parameter is used to fill in missing values for population parameters on the super individuals. Two options exist&#58;<BR><BR><B>None</B><BR>No action is taken and the superindividual data remain unaltered.<BR><BR><B>ImputeByAge</B><BR><BR>The super individuals are imputed using the age variable. This means&#59; if a super individual lack a value for the age variable&#44; a search is done for other super individuals within the same length group&#44; estimation layer and station which has a value for age. If such individuals are found&#44; one of them is randomly selected. Population parameter values are inserted into the individual that did not have any age value. If needed this procedure is repeated on stratum or survey resolution.
Parameter: Name=Seed, Required=false, DefaultValue=1, DataType=Integer, ParentTag=FillVariables.ImputeByAge, Description=The <I>Seed</I> parameter is used to ensure random reproducability in the ImputeByAge method.
Parameter: Name=FillWeight, Required=true, DefaultValue=Mean, Values=Mean;Regression;FromFile;Manually;None, DataType=String, Description=The <I>FillWeightMethod</I> parameter is used to fill in missing weight values on the super individuals. Three options exist&#58;<BR><BR><B>None</B><BR>No action is taken and the superindividual data remains unaltered.<BR><BR><B>Mean<BR>Regression</B><BR>Even after the imputation&#44; there may still be super individuals which lack weight. If a super individual lack weight&#44; a search is done for other super individuals that has a value for weight within the same length group&#44; estimation layer and stratum. If such individuals are found&#44; either the mean is calculated or a regression is made &#40;a user choice of Mean or Regression&#41;. This calculated weight value is inserted into the individual that did not have any weight value.
Parameter: Name=FileName, Required=false, DataType=String, ParentTag=FillWeight.FromFile, Description=The <I>FileName</I> is a file with coefficients per stratum
Parameter: Name=a, Required=false, DefaultValue=0.01, DataType=String, ParentTag=FillWeight.Manually, Description=The <I>a</I> factor may be splitted by species ie aurita:0.0064,maderensis:0.0147.
Parameter: Name=b, Required=false, DefaultValue=3.0, DataType=String, ParentTag=FillWeight.Manually, Description=The <I>b</I> exponent may be splitted by species ie aurita:3.08,maderensis:2.82.
DataStorage:no.imr.stox.datastorage.SuperIndAbundanceDataStorage
Output: SuperIndividuals

[Function]
Name: FillMissingData_2.4
Description: The <I>FillMissingData</I> function fills in missing data for population parameters in the super individuals data object of the baseline model. This task is performed in two steps. After updating the input <U>SuperIndividual</U> data object&#44; it becomes the output data object. This is later used to present abundance estimates by combinations of various population parameters.
Class: no.imr.stox.functions.report.FillMissingData2_4
Respondable:true
Parameter: Name=SuperIndividuals, Alias=SuperIndAbundance, DataType=SuperIndividuals, FileRef=true, Description=The <I>SuperIndAbundance</I> parameter is used to identify which .csv file from the baseline model should be used as input to this function.<BR><BR>It is not the name of the file that is to be given&#44; but the StoX data type it represents. This data type needs to be <U>SuperIndAbundance</U>.<BR> An updated version of the input <U>SuperIndAbundance</U> is the output from the function.
Parameter: Name=FillVariables, Required=true, DefaultValue=ImputeByAge, Values=ImputeByAge;None, DataType=String, Description=The <I>FillVariables</I> parameter is used to fill in missing values for population parameters on the super individuals. Two options exist&#58;<BR><BR><B>None</B><BR>No action is taken and the superindividual data remain unaltered.<BR><BR><B>ImputeByAge</B><BR><BR>The super individuals are imputed using the age variable. This means&#59; if a super individual lack a value for the age variable&#44; a search is done for other super individuals within the same length group&#44; estimation layer and station which has a value for age. If such individuals are found&#44; one of them is randomly selected. Population parameter values are inserted into the individual that did not have any age value. If needed this procedure is repeated on stratum or survey resolution.
Parameter: Name=Seed, Required=false, DefaultValue=1, DataType=Integer, ParentTag=FillVariables.ImputeByAge, Description=The <I>Seed</I> parameter is used to ensure random reproducability in the ImputeByAge method.
Parameter: Name=FillWeight, Required=true, DefaultValue=Mean, Values=Mean;Regression;FromFile;Manually;None, DataType=String, Description=The <I>FillWeightMethod</I> parameter is used to fill in missing weight values on the super individuals. Three options exist&#58;<BR><BR><B>None</B><BR>No action is taken and the superindividual data remains unaltered.<BR><BR><B>Mean<BR>Regression</B><BR>Even after the imputation&#44; there may still be super individuals which lack weight. If a super individual lack weight&#44; a search is done for other super individuals that has a value for weight within the same length group&#44; estimation layer and stratum. If such individuals are found&#44; either the mean is calculated or a regression is made &#40;a user choice of Mean or Regression&#41;. This calculated weight value is inserted into the individual that did not have any weight value.
Parameter: Name=FileName, Required=false, DataType=String, ParentTag=FillWeight.FromFile, Description=The <I>FileName</I> is a file with coefficients per stratum
Parameter: Name=a, Required=false, DefaultValue=0.01, DataType=String, ParentTag=FillWeight.Manually, Description=The <I>a</I> factor may be splitted by species ie aurita:0.0064,maderensis:0.0147.
Parameter: Name=b, Required=false, DefaultValue=3.0, DataType=String, ParentTag=FillWeight.Manually, Description=The <I>b</I> exponent may be splitted by species ie aurita:3.08,maderensis:2.82.
DataStorage:no.imr.stox.datastorage.SuperIndAbundanceDataStorage
Output: SuperIndividuals

[Function]
Name: EstimateByPopulationCategory
Alias: AbundanceByPopulationCategory
Description: The purpose of the <I>EstimateByPopulationCategory</I> function is to create estimation reports from the baseline. Different main types of reports are created. <BR>These are&#58;<BR><BR>Abundance reports<BR>Biomass reports<BR>Mean Weight reports<BR><BR>The reports are generated from a <U>SuperIndividual</U> input data object.<BR>The reports show the estimate split by population parameters &#40;age, sex, length, special stage, maturity etc.&#41; as well as some other variables &#40;e.g. stratum, cruise etc.&#41;. Up to 5 dimensions of population parameters or other variables may be chosen for the splitting. 
Class: no.imr.stox.functions.report.AbundanceByPopulationCategory
Respondable:true
Parameter: Name=SuperIndividuals, Alias=SuperIndAbundance, DataType=SuperIndividuals, Description= The <I>SuperIndividual</I> parameter is used to define which previous function has generated the input <U>SuperIndividual</U> data object. It contains the estimated abundance by super individuals to be used for reports. Each individual represents a proportion of the estimate and they have population parameters. 
Parameter: Name=LengthInterval, Required=false, DefaultValue=1.0, DataType=Double, Description=The <I>LengthInterval</I> parameter is used to determine a new and courser length interval of the report data compared to the length interval of the input data.
Parameter: Name=Scale, Required=false, DataType=Integer, Description=The <I>Scale</I> parameter is used to set a scale for abundance by number and biomass in the output reports. 
Parameter: Name=Dim1, Required=true, DefaultValue=LenGrp, Values=none;SpecCat;Stratum;EstLayer;LenGrp;cruise;serialno;catchplatform;catchcategory;commonnoname;aphia;age;sex;maturationsstage;specialstage;digestion;fat;liver;vertebraecount;stomachfillfield;liverparasite;spawningage;readability;otolithtype;otolithedge;otolithcentre;calibration, DataType=String, Description=The <I>Dim1</I> parameter is used to determine which population parameter &#40;or some other variables&#41; should be the first dimension when the calculated estimate is to be split.
Parameter: Name=Dim2, Required=true, DefaultValue=age,    Values=none;SpecCat;Stratum;EstLayer;LenGrp;cruise;serialno;catchplatform;catchcategory;commonnoname;aphia;age;sex;maturationsstage;specialstage;digestion;fat;liver;vertebraecount;stomachfillfield;liverparasite;spawningage;readability;otolithtype;otolithedge;otolithcentre;calibration, DataType=String, Description=The <I>Dim2</I> parameter is used to determine which population parameter &#40;or some other variables&#41; should be the second dimension when the calculated estimate is to be split.
Parameter: Name=Dim3, Required=true, DefaultValue=species,Values=none;SpecCat;Stratum;EstLayer;LenGrp;cruise;serialno;catchplatform;catchcategory;commonnoname;aphia;age;sex;maturationsstage;specialstage;digestion;fat;liver;vertebraecount;stomachfillfield;liverparasite;spawningage;readability;otolithtype;otolithedge;otolithcentre;calibration, DataType=String, Description=The <I>Dim3</I> parameter is used to determine which population parameter &#40;or some other variables&#41; should be the third dimension when the calculated estimate is to be split.
Parameter: Name=Dim4, Required=true, DefaultValue=none,   Values=none;SpecCat;Stratum;EstLayer;LenGrp;cruise;serialno;catchplatform;catchcategory;commonnoname;aphia;age;sex;maturationsstage;specialstage;digestion;fat;liver;vertebraecount;stomachfillfield;liverparasite;spawningage;readability;otolithtype;otolithedge;otolithcentre;calibration, DataType=String, Description=The <I>Dim4</I> parameter is used to determine which population parameter &#40;or some other variables&#41; should be the forth dimension when the calculated estimate is to be split.
Parameter: Name=Dim5, Required=true, DefaultValue=none,   Values=none;SpecCat;Stratum;EstLayer;LenGrp;cruise;serialno;catchplatform;catchcategory;commonnoname;aphia;age;sex;maturationsstage;specialstage;digestion;fat;liver;vertebraecount;stomachfillfield;liverparasite;spawningage;readability;otolithtype;otolithedge;otolithcentre;calibration, DataType=String, Description=The <I>Dim5</I> parameter is used to determine which population parameter &#40;or some other variables&#41; should be the fifth dimension when the calculated estimate is to be split.
DataStorage:no.imr.stox.datastorage.AbundanceByPopCategoryDataStorage
Output: Reports

[Function]
Name: TotalAbundance
Description: The <I>TotalAbundance</I> function creates a report for swept area.
Class: no.imr.stox.functions.report.TotalAbundance
Respondable:true
Parameter: Name=WeightAbundance, Required=false, DataType=Abundance, FileRef=true, Description=The <I>CatchAbundance</I> parameter defines the abundance for catch weight
Parameter: Name=CountAbundance, Required=false, DataType=Abundance, FileRef=true, Description=The <I>CatchAbundance</I> parameter defines the abundance for catch count
Parameter: Name=Scale, Required=false, DataType=Integer, Description=The <I>Scale</I> parameter is used to scale abundance by number and biomass in the output. 
DataStorage:no.imr.stox.datastorage.TotalAbundanceStorage
Output: Reports
