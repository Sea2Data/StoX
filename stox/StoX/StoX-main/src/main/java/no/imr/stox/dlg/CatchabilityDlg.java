/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package no.imr.stox.dlg;

import java.beans.PropertyEditor;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import no.imr.sea2data.imrbase.util.Conversion;
import no.imr.sea2data.imrbase.util.ExportUtil;
import no.imr.stox.bo.CatchabilityParam;
import static no.imr.stox.functions.utils.ProjectUtils.txt;

/**
 *
 * @author aasmunds
 */
public class CatchabilityDlg extends javax.swing.JDialog {

    PropertyEditor ed;

    /**
     * Creates new form TablePropertyDlg
     */
    public CatchabilityDlg(PropertyEditor ed) {
        super((java.awt.Frame) null, true);
        this.ed = ed;
        initComponents();
        setTitle("Catchability table:");
        setLocationRelativeTo(null);
        getRootPane().setDefaultButton(jOK);
        DefaultTableModel dt = (DefaultTableModel) jTable.getModel();
        String txt = ed.getAsText();
        List<CatchabilityParam> lines = CatchabilityParam.fromString(txt);
        dt.setRowCount(lines.size());
        for (int row = 0; row < lines.size(); row++) {
            CatchabilityParam line = lines.get(row);
            dt.setValueAt(line.getSpecCat(), row, 0);
            if (line.getAlpha() != null) {
                dt.setValueAt(line.getAlpha(), row, 1);
            }
            if (line.getBeta() != null) {
                dt.setValueAt(line.getBeta(), row, 2);
            }
            if (line.getlMin() != null) {
                dt.setValueAt(line.getlMin(), row, 3);
            }
            if (line.getlMax() != null) {
                dt.setValueAt(line.getlMax(), row, 4);
            }
            if (row > dt.getRowCount() - 1) {
                break; // limit
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOK = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        org.openide.awt.Mnemonics.setLocalizedText(jOK, org.openide.util.NbBundle.getMessage(CatchabilityDlg.class, "CatchabilityDlg.jOK.text")); // NOI18N
        jOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOKActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "SpecCat", "Alpha", "Beta", "LMin", "LMax"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable);
        jTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable.getColumnModel().getColumnCount() > 0) {
            jTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(CatchabilityDlg.class, "CatchabilityDlg.jTable.columnModel.title1")); // NOI18N
            jTable.getColumnModel().getColumn(1).setMinWidth(50);
            jTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTable.getColumnModel().getColumn(1).setMaxWidth(50);
            jTable.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(CatchabilityDlg.class, "CatchabilityDlg.jTable.columnModel.title2")); // NOI18N
            jTable.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(CatchabilityDlg.class, "CatchabilityDlg.jTable.columnModel.title3")); // NOI18N
            jTable.getColumnModel().getColumn(3).setHeaderValue(org.openide.util.NbBundle.getMessage(CatchabilityDlg.class, "CatchabilityDlg.jTable.columnModel.title4")); // NOI18N
            jTable.getColumnModel().getColumn(4).setHeaderValue(org.openide.util.NbBundle.getMessage(CatchabilityDlg.class, "CatchabilityDlg.jTable.columnModel.title0_1")); // NOI18N
        }

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(CatchabilityDlg.class, "CatchabilityDlg.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jDelete, org.openide.util.NbBundle.getMessage(CatchabilityDlg.class, "CatchabilityDlg.jDelete.text")); // NOI18N
        jDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jOK, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jDelete)
                        .addComponent(jButton1))
                    .addComponent(jOK))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOKActionPerformed
        DefaultTableModel dt = (DefaultTableModel) jTable.getModel();
        String res = "";
        for (int row = 0; row < dt.getRowCount(); row++) {
            String specCat = (String) dt.getValueAt(row, 0);
            Double alpha = (Double) dt.getValueAt(row, 1);
            Double beta = (Double) dt.getValueAt(row, 2);
            Double lmin = (Double) dt.getValueAt(row, 3);
            Double lmax = (Double) dt.getValueAt(row, 4);
            if (specCat == null && alpha == null && beta == null && lmin == null && lmax == null) {
                continue;
            }
            String line = ExportUtil.separatedMissingStr(';', "", specCat, alpha, beta, lmin, lmax);
            res += (res.isEmpty() ? "" : "/") + line;
        }
        ed.setAsText(res);
        setVisible(false);
    }//GEN-LAST:event_jOKActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel dt = (DefaultTableModel) jTable.getModel();
        dt.setNumRows(dt.getRowCount() + 1);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteActionPerformed
        DefaultTableModel dt = (DefaultTableModel) jTable.getModel();
        if (jTable.getSelectedRow() >= 0) {
            dt.removeRow(jTable.getSelectedRow());
        }
    }//GEN-LAST:event_jDeleteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jDelete;
    private javax.swing.JButton jOK;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}
