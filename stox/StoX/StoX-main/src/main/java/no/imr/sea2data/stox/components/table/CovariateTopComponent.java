/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package no.imr.sea2data.stox.components.table;

import java.util.HashMap;
import java.util.Map;
import javax.swing.JComponent;
import no.imr.stox.functions.utils.Functions;
import no.imr.stox.model.IModelListenerService;
import no.imr.stox.model.IProcess;
import no.imr.stox.model.ModelListenerAdapter;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//no.imr.sea2data.stox.components.table//Covariate//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "CovariateTopComponent",
        iconBase = "images/covariate.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "output", openAtStartup = true)
@ActionID(category = "Window", id = "no.imr.sea2data.stox.components.table.CovariateTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_CovariateAction",
        preferredID = "CovariateTopComponent"
)
@Messages({
    "CTL_CovariateAction=Covariate",
    "CTL_CovariateTopComponent=Covariate Window",
    "HINT_CovariateTopComponent=This is a Covariate window"
})
public final class CovariateTopComponent extends TopComponent {

    Map<String, CovariatePanel> treeView = new HashMap<>();

    public CovariateTopComponent() {
        initComponents();
        setName(Bundle.CTL_CovariateTopComponent());
        setToolTipText(Bundle.HINT_CovariateTopComponent());
        int i = 0;
        for (String covFnc : new String[]{Functions.FN_DEFINETEMPORAL, Functions.FN_DEFINEGEARFACTOR, Functions.FN_DEFINESPATIAL}) {
            for (String covSourceType : new String[]{Functions.SOURCETYPE_LANDING, Functions.SOURCETYPE_BIOTIC}) {
                // 
                String code = covFnc + "-" + covSourceType;
                CovariatePanel cv = new CovariatePanel(covFnc, covSourceType);
                treeView.put(code, cv);
                ((JComponent) jTabbedPane1.getComponentAt(i)).add(cv);
                i++;
            }
        }
        IModelListenerService fls = (IModelListenerService) Lookup.getDefault().lookup(IModelListenerService.class);
        fls.getModelListeners().add(new ModelListenerAdapter() {
            @Override
            public void onProcessEnd(IProcess process) {
                switch (process.getMetaFunction().getName()) {
                    case Functions.FN_DEFINETEMPORAL:
                    case Functions.FN_DEFINEGEARFACTOR:
                    case Functions.FN_DEFINESPATIAL:
                        String viewCodeP = process.getMetaFunction().getName() + "-" + process.getParameterValue("SourceType");
                        for (int iComp = 0; iComp < jTabbedPane1.getComponentCount(); iComp++) {
                            JComponent jComp = (JComponent) jTabbedPane1.getComponentAt(iComp);
                            CovariatePanel covPanel = (CovariatePanel) jComp.getComponents()[0];
                            if (covPanel.getViewCode().equals(viewCodeP)) {
                                jTabbedPane1.setSelectedIndex(iComp);
                                break;
                            }
                        }
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jAddCovariate = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();

        jToolBar1.setFloatable(false);
        jToolBar1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar1.setRollover(true);
        jToolBar1.setMinimumSize(new java.awt.Dimension(24, 24));

        jAddCovariate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/covariate.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jAddCovariate, org.openide.util.NbBundle.getMessage(CovariateTopComponent.class, "CovariateTopComponent.jAddCovariate.text")); // NOI18N
        jAddCovariate.setFocusable(false);
        jAddCovariate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jAddCovariate.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jAddCovariate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddCovariateActionPerformed(evt);
            }
        });
        jToolBar1.add(jAddCovariate);

        jPanel1.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(CovariateTopComponent.class, "CovariateTopComponent.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel2.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(CovariateTopComponent.class, "CovariateTopComponent.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jPanel3.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(CovariateTopComponent.class, "CovariateTopComponent.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        jPanel4.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(CovariateTopComponent.class, "CovariateTopComponent.jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        jPanel5.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(CovariateTopComponent.class, "CovariateTopComponent.jPanel5.TabConstraints.tabTitle"), jPanel5); // NOI18N

        jPanel6.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(CovariateTopComponent.class, "CovariateTopComponent.jPanel6.TabConstraints.tabTitle"), jPanel6); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jAddCovariateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddCovariateActionPerformed
        if (jTabbedPane1.getSelectedIndex() != -1) {
            ((CovariatePanel)(((JComponent) jTabbedPane1.getComponentAt(jTabbedPane1.getSelectedIndex())).getComponents()[0])).addRow();
        }
    }//GEN-LAST:event_jAddCovariateActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAddCovariate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
