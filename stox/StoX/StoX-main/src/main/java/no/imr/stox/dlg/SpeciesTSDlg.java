/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package no.imr.stox.dlg;

import java.beans.PropertyEditor;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import javax.swing.table.DefaultTableModel;
import no.imr.sea2data.imrbase.util.Conversion;
import no.imr.sea2data.imrbase.util.ExportUtil;
import no.imr.stox.bo.CatchabilityParam;
import no.imr.stox.bo.SpeciesTSMix;

/**
 *
 * @author aasmunds
 */
public class SpeciesTSDlg extends javax.swing.JDialog {

    PropertyEditor ed;

    /**
     * Creates new form TablePropertyDlg
     */
    public SpeciesTSDlg(PropertyEditor ed) {
        super((java.awt.Frame) null, true);
        this.ed = ed;
        initComponents();
        setTitle("Split acoustic categories:");
        setLocationRelativeTo(null);
        getRootPane().setDefaultButton(jOK);
        DefaultTableModel dt = (DefaultTableModel) jTable.getModel();
        String txt = ed.getAsText();
        List<SpeciesTSMix> lines = SpeciesTSMix.fromString(txt);
        dt.setRowCount(1);
        lines.stream().forEach(line -> {
            int row = dt.getRowCount() - 1;
            dt.setValueAt(line.getMixAcoCat(), row, 0);
            dt.setValueAt(line.getAcoCat(), row, 1);
            dt.setValueAt(line.getSpecCat(), row, 2);
            if (line.getM() != null) {
                dt.setValueAt(line.getM(), row, 3);
            }
            if (line.getA() != null) {
                dt.setValueAt(line.getA(), row, 4);
            }
            if (line.getD() != null) {
                dt.setValueAt(line.getD(), row, 5);
            }
            dt.setRowCount(dt.getRowCount() + 1);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOK = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jDelete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        org.openide.awt.Mnemonics.setLocalizedText(jOK, org.openide.util.NbBundle.getMessage(SpeciesTSDlg.class, "SpeciesTSDlg.jOK.text")); // NOI18N
        jOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOKActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "MixAcoCat", "AcoCat", "SpecCat", "m", "a", "d"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable);
        jTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable.getColumnModel().getColumnCount() > 0) {
            jTable.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(SpeciesTSDlg.class, "SpeciesTSDlg.jTable.columnModel.title5")); // NOI18N
            jTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(SpeciesTSDlg.class, "SpeciesTSDlg.jTable.columnModel.title0")); // NOI18N
            jTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(SpeciesTSDlg.class, "SpeciesTSDlg.jTable.columnModel.title1")); // NOI18N
            jTable.getColumnModel().getColumn(3).setMinWidth(50);
            jTable.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTable.getColumnModel().getColumn(3).setMaxWidth(50);
            jTable.getColumnModel().getColumn(3).setHeaderValue(org.openide.util.NbBundle.getMessage(SpeciesTSDlg.class, "SpeciesTSDlg.jTable.columnModel.title2")); // NOI18N
            jTable.getColumnModel().getColumn(4).setHeaderValue(org.openide.util.NbBundle.getMessage(SpeciesTSDlg.class, "SpeciesTSDlg.jTable.columnModel.title3")); // NOI18N
            jTable.getColumnModel().getColumn(5).setHeaderValue(org.openide.util.NbBundle.getMessage(SpeciesTSDlg.class, "SpeciesTSDlg.jTable.columnModel.title4")); // NOI18N
        }

        org.openide.awt.Mnemonics.setLocalizedText(jDelete, org.openide.util.NbBundle.getMessage(SpeciesTSDlg.class, "SpeciesTSDlg.jDelete.text")); // NOI18N
        jDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(SpeciesTSDlg.class, "SpeciesTSDlg.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jOK, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jOK)
                    .addComponent(jDelete)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOKActionPerformed
        DefaultTableModel dt = (DefaultTableModel) jTable.getModel();
        if (jTable.getCellEditor() != null) {
            jTable.getCellEditor().stopCellEditing();
        }
        List<SpeciesTSMix> c = IntStream.range(0, dt.getRowCount()).mapToObj(row -> {
            String mixacoCat = (String) dt.getValueAt(row, 0);
            String acoCat = (String) dt.getValueAt(row, 1);
            String specCat = (String) dt.getValueAt(row, 2);
            if (mixacoCat == null || acoCat == null || specCat.isEmpty()) {
                return null;
            }
            Double m = (Double) dt.getValueAt(row, 3);
            Double a = (Double) dt.getValueAt(row, 4);
            Double d = (Double) dt.getValueAt(row, 5);
            return new SpeciesTSMix(mixacoCat, acoCat, specCat, m, a, d);
        }).filter(ca -> ca != null).collect(Collectors.toList());
        String res = SpeciesTSMix.toString(c);
        ed.setAsText(res);
        setVisible(false);
    }//GEN-LAST:event_jOKActionPerformed

    private void jDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteActionPerformed
        DefaultTableModel dt = (DefaultTableModel) jTable.getModel();
        if (jTable.getSelectedRow() >= 0) {
            dt.removeRow(jTable.getSelectedRow());
        }
    }//GEN-LAST:event_jDeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel dt = (DefaultTableModel) jTable.getModel();
        dt.setNumRows(dt.getRowCount() + 1);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jDelete;
    private javax.swing.JButton jOK;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}
