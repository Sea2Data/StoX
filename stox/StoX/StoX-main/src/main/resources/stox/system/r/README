# Rstox version: 1.5.2 (latest alpha, 2017-08-25)
# R version: 3.3.2

# The package Rstox contains most of the functionality of the stock assesment utility StoX, which is an open source approach to acoustic and swept area survey calculations. Download Rstox from ftp://ftp.imr.no/StoX/Download/Rstox or install by running the following commands in R:

# Install the packages that Rstox depends on. Note that this updates all the specified packages to the latest (binary) version:
dep.pck <- c("data.table", "MASS", "pbapply", "rgdal", "rgeos", "rJava", "sp", "XML")
install.packages(dep.pck, repos="http://cran.us.r-project.org", type="binary")

# Install Rstox:
install.packages("ftp://ftp.imr.no/StoX/Download/Rstox/Versions/Alpha/Rstox_1.5.2/Rstox_1.5.2.tar.gz", repos=NULL)

# Note that 64 bit Java is required to run Rstox
# On Windows, install Java from this webpage: https://www.java.com/en/download/windows-64bit.jsp, or follow the instructions found on ftp://ftp.imr.no/StoX/Tutorials/
# On Mac, getting Java and Rstox to communicate can be challenging. If you run into problems such as "Unsupported major.minor version ...", try the following:
# Update java, on
# http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html
# If this does not work install first the JDK and then the JRE:
# http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
# http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html
# You may want to check that the downloaded version is first in the list by running the following in the Terminal:
# /usr/libexec/java_home -V
# java -version
# Then run this in the Terminal:
# R CMD javareconf
# Open R (close and then open if already open) and install rJava:
# install.packages('rJava', type='source')
# Then the installed Rstox should work.


# Release notes:
# 1. Added the function readXMLfiles() for reading XML-files (creating a temporary StoX project).

# 2. Rstox can now create and open projects located elsewhere than the default workspace, using the full path as the input projectName.

# 3. Added encoding="UTF-8" in getProcessDataTableAsDataFrame() and getDataFrameAtLevel() (used by getBaseline()) preventing misrepresented nordic characters (æ, ø, å).

# 4. Added the option 'tsn' in getNMDdata(), specifying a species by the tsn (species) code. Run g <- getNMDinfo("taxa") for a matrix of tsn codes and species names.

# 5. Changed treatment of 'acousticMethod' and 'bioticMethod' in runBootstrap(). The two existing methods are currently (a) one which bootstraps acoustic PSUs and trawl stations within stratum, and (b) one which only bootstraps trawl stations within stratum. Previously the trawl stations were denoted by "EDSU", but a more precice notation is "PSU", which also includes possible grouping of trawl stations into one PSU which should be included in the bootstrapping as a whole (not as single trawl stations). The preferred notation indicating the existing bootstrap methods is now PSU~Stratum, whereas EDSU~Stratum is still accepted, with a deprecation-warning.

# 6. Added the option 'simplify' in getNMDinfo(), which converts the data into matrices that are easier to access. Also added case insentitive support for the reference data type.

# 7. Added the function getProject() for use in saveProject() and openProject(). This function searches for the project Java object in R memory. Also added isProject() and reopenProject()

# 8. Removed the paramters startProcess and endProcess in bootstrapOneIteration() and bootstrapParallel().

# 9. Added the function getProjectPaths() to return all useful paths of a project. 

# 10. Added the function getRstoxEnv() using initiateRstoxEnv(), which should be used when retrieving data from the RstoxEnv environment or the environment of a project. When writing to the environment of a project, allways do temp <- getRstoxEnv() first to ensure that the RstoxEnv environment exists.

# 11. Updated baseline2eca(), which now returns the data 'biotic', 'landing', covariate matrices realted to these two, and various resource objects.


